#version 450
#extension GL_EXT_nonuniform_qualifier : enable

layout(local_size_x = 1024, local_size_y = 1) in;

#include "fftutil.glsl"

layout(set = 0, binding = 3, rg16) uniform image2D images[];
layout(set = 0, binding = 1) uniform sampler2D sampledImages[];

layout(push_constant) uniform Push{
    uint inImageId;
    uint outImageId;
    uint width;
    uint height;
    // pass 0 is red channel, pass 1 is green, pass 2 blue
    uint pass;
    uint logN;
} push;

shared float real[1024];
shared float imag[1024];

void main() {
    ivec2 index = ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    vec3 inImageMask;
    switch (push.pass) {
    case 0: 
        inImageMask = vec3(1,0,0);
        break;
    case 1: 
        inImageMask = vec3(0,1,0);
        break;
    case 2: 
        inImageMask = vec3(0,0,1);
        break;
    default:
        break;
    }

    vec3 readInPixel = texelFetch(sampledImages[push.inImageId], index, 0).rgb;
    readInPixel *= inImageMask;
    float channelValue = readInPixel.r + readInPixel.g + readInPixel.b;
    imageStore(images[push.outImageId], index, vec4(channelValue, 0, 0, 0));

    for (int n = 0; n < push.logN; n++) {
        
        barrier();
    }
}