#version 450
#extension GL_KHR_vulkan_glsl : enable

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

#include "chunkgen/buffers.glsl"
#include "chunkgen/noise.glsl"

layout(push_constant) uniform Push {
    vec3 pos;
}
p;

uint gen_block(in vec3 b_pos) {
    float b_val = biome_noise(b_pos);
    float val = terrain_noise(b_pos);
    float r = rand(b_pos);

    uint biome_id = Plains;
    if (b_val < -0.2)
        biome_id = Forest;
    else if (b_val > 0.12)
        biome_id = Desert;
    if (b_pos.y > -4 + r * 3 && b_pos.y < 4 + r * 3 && val < 0.05 + r * 0.1 && val > -0.05 - r * 0.1)
        biome_id = Beach;

    biome_id = biome_id << 16;

    if (val > 0.0f) {
        return Stone | biome_id;
    } else {
        if (b_pos.y < 0) {
            return Water | biome_id;
        }
    }
    return Air | biome_id;
}

void main() {
    uvec3 global_i = gl_GlobalInvocationID.xyz;
    uvec3 chunk_i = global_i / CHUNK_SIZE.xyz;
    uvec3 block_i = global_i % CHUNK_SIZE.xyz;
    uint block_index = block_i.x + block_i.y * CHUNK_SIZE.x + block_i.z * CHUNK_SIZE.x * CHUNK_SIZE.y;
    uint chunk_index = chunk_i.x + chunk_i.y * CHUNK_MAX.x + chunk_i.z * CHUNK_MAX.x * CHUNK_MAX.y;
    vec3 block_pos = vec3(global_i) + p.pos * CHUNK_SIZE;
    chunks_0[chunk_index].blocks[block_index] = gen_block(block_pos);
}
